{"version":3,"sources":["components/Dialogs/Dialogs.module.css","hoc/authRedirect.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/MessageItem/MessageItem.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","mapStateToPropsForRedirect","state","isAuth","auth","witchAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","DialogItem","className","d","dialog","src","urlImg","alt","id","dialogNav","activeClassName","active","name","MessageItem","messageItem","message","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","addMessage","Field","component","TextArea","validate","requiredField","placeholder","Dialogs","dialogElements","dialogs","map","key","messageElements","messages","m","dialogues","dialoguesItem","values","newMessageText","compose","messagePage","messageData","dialogData","dispatch","addMessageAC"],"mappings":"qGACAA,EAAOC,QAAU,CAAC,UAAY,2BAA2B,OAAS,wBAAwB,cAAgB,+BAA+B,UAAY,2BAA2B,OAAS,wBAAwB,SAAW,0BAA0B,YAAc,6BAA6B,WAAa,8B,uICI1SC,EAA6B,SAACC,GAAD,MAAY,CACzCC,OAAQD,EAAME,KAAKD,SAGVE,EAAoB,SAACC,GAAe,IACvCC,EADsC,uKAGpC,OAAIC,KAAKC,MAAMN,OACR,kBAACG,EAAcE,KAAKC,OADG,kBAAC,IAAD,CAAUC,GAAI,eAHR,GACZC,IAAML,WAQtC,OADqCM,YAAQX,EAARW,CAAoCL,K,+FCD9DM,EATI,SAACJ,GAChB,OACI,yBAAKK,UAAWC,IAAEC,QACd,yBAAKC,IAAKR,EAAMS,OAAQC,IAAI,UAC5B,kBAAC,IAAD,CAAST,GAAI,YAAcD,EAAMW,GAAIN,UAAWC,IAAEM,UAAWC,gBAAmBP,IAAEQ,QAASd,EAAMe,QCC9FC,EARK,SAAChB,GACjB,OACI,yBAAKK,UAAWC,IAAEW,aACd,6BAAMjB,EAAMkB,W,yCCyBpBC,EAAcC,YAAiB,IAc7BC,EAAsBC,YAAU,CAClCC,KAAM,wBADkBD,EAbL,SAACtB,GACpB,OACI,0BAAMwB,SAAUxB,EAAMyB,aAAcpB,UAAWC,IAAEoB,YAC7C,6BACI,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUC,SAAU,CAACC,IAAeZ,GAAcJ,KAAK,iBAAiBiB,YAAY,uBAE1G,6BACI,oDAUDC,EAzCC,SAACjC,GACb,IAAIkC,EAAiBlC,EAAMmC,QAAQC,KAAI,SAAA9B,GAAC,OAAK,kBAAC,EAAD,CAAYS,KAAMT,EAAES,KAAMsB,IAAK/B,EAAEK,GAAIA,GAAIL,EAAEK,GAAIF,OAAQH,EAAEG,YAClG6B,EAAkBtC,EAAMuC,SAASH,KAAI,SAAAI,GAAC,OAAK,kBAAC,EAAD,CAAatB,QAASsB,EAAEtB,QAASmB,IAAKG,EAAE7B,QAOvF,OAAqB,IAAjBX,EAAMN,OAAyB,kBAAC,IAAD,CAAUO,GAAI,WAE7C,yBAAKI,UAAWC,IAAEmC,WACd,yBAAKpC,UAAWC,IAAEoC,eACbR,GAEL,yBAAK7B,UAAWC,IAAEiC,UACbD,EACD,kBAACjB,EAAD,CAAqBG,SAZb,SAACmB,GACjB3C,EAAM0B,WAAWiB,EAAOC,sB,wBCUjBC,sBAAQ1C,aAjBD,SAACV,GACnB,MAAO,CACH8C,SAAU9C,EAAMqD,YAAYC,YAC5BZ,QAAS1C,EAAMqD,YAAYE,WAC3BJ,eAAgBnD,EAAMqD,YAAYF,eAClClD,OAAQD,EAAME,KAAKD,WAIH,SAACuD,GACrB,MAAO,CACHvB,WAAY,SAACkB,GACTK,EAASC,YAAaN,SAKiChD,IAApDiD,CAAuEZ","file":"static/js/4.84b83f46.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogues\":\"Dialogs_dialogues__2TYsi\",\"dialog\":\"Dialogs_dialog__lk_cw\",\"dialoguesItem\":\"Dialogs_dialoguesItem__m4mqC\",\"dialogNav\":\"Dialogs_dialogNav__baout\",\"active\":\"Dialogs_active__2sQhs\",\"messages\":\"Dialogs_messages__1w_Up\",\"messageItem\":\"Dialogs_messageItem__3wY4Y\",\"addMessage\":\"Dialogs_addMessage__1Bihp\"};","import React from \"react\";\nimport {Redirect} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\n\n\nlet mapStateToPropsForRedirect = (state) => ({\n    isAuth: state.auth.isAuth\n});\n\nexport const witchAuthRedirect = (Component) => {\n    class RedirectComponent extends React.Component {\n        render() {\n            if(!this.props.isAuth) return <Redirect to={\"/login\"} />\n            return <Component {...this.props} />\n        }\n    }\n\n    let ConnectedAuthRederectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\n    return ConnectedAuthRederectComponent\n}\n","import React from \"react\";\nimport d from './../Dialogs.module.css'\nimport {NavLink} from \"react-router-dom\";\n\n\n\n\nconst DialogItem = (props) => {\n    return (\n        <div className={d.dialog}>\n            <img src={props.urlImg} alt=\"daria\"/>\n            <NavLink to={\"/dialogs/\" + props.id} className={d.dialogNav} activeClassName = {d.active}>{props.name}</NavLink>\n        </div>\n    )\n}\n\nexport default DialogItem","import React from \"react\";\nimport d from './../Dialogs.module.css'\n\n\nconst MessageItem = (props) => {\n    return (\n        <div className={d.messageItem}>\n            <div>{props.message}</div>\n        </div>\n    )\n}\n\nexport default MessageItem","import React from \"react\";\nimport d from './Dialogs.module.css'\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport MessageItem from \"./MessageItem/MessageItem\";\nimport {Redirect} from \"react-router-dom\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {TextArea} from \"../commons/FormsControls/FormsControls\";\nimport {maxLengthCreator, requiredField} from \"../../Utils/Validation/validators\";\n\nconst Dialogs = (props) => {\n    let dialogElements = props.dialogs.map(d => (<DialogItem name={d.name} key={d.id} id={d.id} urlImg={d.urlImg}/>));\n    let messageElements = props.messages.map(m => (<MessageItem message={m.message} key={m.id}/>));\n\n\n    let addNewMessage = (values) => {\n        props.addMessage(values.newMessageText);\n    };\n\n    if (props.isAuth === false) return <Redirect to={\"/login\"}/>\n    return (\n        <div className={d.dialogues}>\n            <div className={d.dialoguesItem}>\n                {dialogElements}\n            </div>\n            <div className={d.messages}>\n                {messageElements}\n                <AddMessageFormRedux onSubmit={addNewMessage}/>\n            </div>\n        </div>\n    )\n}\n\nlet maxLength50 = maxLengthCreator(50);\nconst AddMessageForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit} className={d.addMessage}>\n            <div>\n                <Field component={TextArea} validate={[requiredField, maxLength50]} name=\"newMessageText\" placeholder=\"Enter new Message\"/>\n            </div>\n            <div>\n                <button>Add Message</button>\n            </div>\n        </form>\n    )\n}\n\nconst AddMessageFormRedux = reduxForm({\n    form: \"dialogAddMessageForm\"\n})(AddMessageForm);\n\nexport default Dialogs","import React from \"react\";\nimport {addMessageAC} from \"../../redux/message-reduser\";\nimport Dialogs from \"./Dialogs\";\nimport {connect} from \"react-redux\";\nimport {witchAuthRedirect} from \"../../hoc/authRedirect\";\nimport {compose} from \"redux\";\n\n\nlet mapStateToProps = (state) => {\n    return {\n        messages: state.messagePage.messageData,\n        dialogs: state.messagePage.dialogData,\n        newMessageText: state.messagePage.newMessageText,\n        isAuth: state.auth.isAuth,\n    }\n}\n\nlet mapDispatchTProps = (dispatch) => {\n    return {\n        addMessage: (newMessageText) => {\n            dispatch(addMessageAC(newMessageText));\n        },\n    }\n}\n\nexport default compose(connect(mapStateToProps,mapDispatchTProps), witchAuthRedirect)(Dialogs);"],"sourceRoot":""}