{"version":3,"sources":["hoc/authRedirect.jsx","components/Profile/AvatarDescription/avatarDescription.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/AvatarDescription/ProfileStatusWithHooks.jsx","components/Profile/AvatarDescription/AvatarDescription.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","witchAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","className","p","statusUser","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","AvatarDescription","profile","wallImage","alt","src","avatar","photos","large","discription","fullName","contactsUser","contacts","vk","Preloader","Post","posts","item","text","message","like","MyPosts","memo","console","log","postElements","profilePage","postData","map","m","key","id","wall","addPost","AddPostFormRedux","onSubmit","values","newPostText","maxLength15","maxLengthCreator","reduxForm","form","handleSubmit","Field","validate","requiredField","component","TextArea","name","placeholder","MyPostsContainer","dispatch","addPostActionCreator","Profile","ProfileContainer","userID","match","params","authorizedUserId","history","push","getUserProfile","getStatus","compose","userId","withRouter"],"mappings":"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","file":"static/js/3.f7a82b8e.chunk.js","sourcesContent":["import React from \"react\";\nimport {Redirect} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\n\n\nlet mapStateToPropsForRedirect = (state) => ({\n    isAuth: state.auth.isAuth\n});\n\nexport const witchAuthRedirect = (Component) => {\n    class RedirectComponent extends React.Component {\n        render() {\n            if(!this.props.isAuth) return <Redirect to={\"/login\"} />\n            return <Component {...this.props} />\n        }\n    }\n\n    let ConnectedAuthRederectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\n    return ConnectedAuthRederectComponent\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wallImage\":\"avatarDescription_wallImage__19baP\",\"avatar\":\"avatarDescription_avatar__2sWD7\",\"discription\":\"avatarDescription_discription__2IFhU\",\"statusUser\":\"avatarDescription_statusUser__cJfqa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wall\":\"MyPosts_wall__1c8gn\",\"addPost\":\"MyPosts_addPost__qj3M7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__ihtu9\",\"text\":\"Post_text__3_Vii\",\"like\":\"Post_like__oViQh\"};","import React, {useEffect, useState} from \"react\";\nimport p from \"./avatarDescription.module.css\";\n\n\nconst ProfileStatusWithHooks = (props) => {\n    let [editMode, setEditMode]  = useState(false);\n    let [status, setStatus]  = useState(props.status);\n\n    useEffect(()=>{\n        setStatus(props.status)\n    }, [props.status]);\n    const activateEditMode = () => {\n        setEditMode(true);\n    }\n    const deActivateEditMode = () => {\n        setEditMode(false);\n        props.updateStatus(status);\n    }\n    const onStatusChange = (e) => {\n        setStatus(e.currentTarget.value);\n    }\n\n    return (\n        <div>\n            {!editMode &&\n            <div>\n                <span onDoubleClick={activateEditMode} className={p.statusUser}>\n                    {props.status || \"no status...\"}\n                </span>\n            </div>}\n            {editMode &&\n            <div>\n                <input onChange={onStatusChange} value={status} autoFocus={true} onBlur={deActivateEditMode}/>\n            </div>}\n        </div>\n    )\n}\n\nexport default ProfileStatusWithHooks;","import React from 'react';\nimport p from \"./avatarDescription.module.css\";\nimport Preloader from \"../../commons/Preloader/Preloader\";\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\n\n\n\nconst AvatarDescription = (props) => {\n    if (!props.profile) {\n        return <Preloader />\n    }\n\n    return (\n        <div>\n            <div className={p.wallImage}>\n                <img alt=\"CuberPunk\"\n                     src='https://s1.1zoom.ru/big3/984/Canada_Parks_Lake_Mountains_Forests_Scenery_Rocky_567540_3840x2400.jpg'/>\n            </div>\n            <div className={p.avatar}>\n                <img alt=\"avatar\" src={props.profile.photos.large}/>\n                <div className={p.discription}>\n                    <div className={p.fullName}>{props.profile.fullName}</div>\n                    <div><ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus} /></div>\n                    <div className={p.contactsUser}>В контакте: {props.profile.contacts.vk}</div>\n                </div>\n\n            </div>\n        </div>\n    )\n}\n\nexport default AvatarDescription;","import React from 'react';\nimport posts from \"./Post.module.css\";\n\nconst Post = (props) => {\n    return (\n        <div className = {posts.item}>\n            <img src=\"https://sun9-52.userapi.com/c851120/v851120160/19fa57/I2WRc_mpc9E.jpg\" alt=\"\"/>\n            <div className = {posts.text}>\n                { props.message }\n            </div>\n            <div className = {posts.like}>Like { props.like} </div>\n        </div>\n    );\n}\n\nexport default Post;","import React from 'react';\nimport m from \"./MyPosts.module.css\"\nimport Post from \"./Post/Post\"\nimport {Field, reduxForm} from \"redux-form\";\nimport {maxLengthCreator, requiredField} from \"../../../Utils/Validation/validators\";\nimport {TextArea} from \"../../commons/FormsControls/FormsControls\";\n\n\nconst MyPosts = React.memo(props => {\n    console.log(\"render\");\n    let state = props.profilePage;\n    let postElements = state.postData.map(m => <Post message={m.message} key={m.id} like={m.like}/>)\n    let addPost = (values) => props.addPost(values.newPostText);\n\n    return (\n        <div className={m.wall}>\n            <div className={m.addPost}>\n                <h3>My Posts</h3>\n                <AddPostFormRedux onSubmit={addPost}/>\n            </div>\n            <div>\n                {postElements}\n            </div>\n        </div>\n    );\n});\n\nlet maxLength15 = maxLengthCreator(15);\nconst addPostForm = (props) => {\n\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field validate={[requiredField, maxLength15]} component={TextArea} name=\"newPostText\"\n                       placeholder={\"Enter text...\"}/>\n            </div>\n            <div>\n                <button>Add post</button>\n            </div>\n        </form>\n    )\n}\nconst AddPostFormRedux = reduxForm({\n    form: 'addPost',\n})(addPostForm);\n\nexport default MyPosts;","import React from 'react';\nimport {addPostActionCreator} from \"../../../redux/profile-reduser\";\nimport MyPosts from \"./MyPosts\";\nimport {connect} from \"react-redux\";\n\n\nlet mapStateToProps = (state) => {\n    return {\n        profilePage: state.profilePage\n    }\n}\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        addPost: (newPostText) => {\n            dispatch(addPostActionCreator(newPostText))\n        },\n\n    }\n}\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\n\nexport default MyPostsContainer;","import React from 'react';\nimport AvatarDescription from \"./AvatarDescription/AvatarDescription\";\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\n\n\n\n\nconst Profile = (props) => {\n\n    return (\n        <div>\n            <AvatarDescription profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\n            <MyPostsContainer />\n        </div>\n    );\n}\n\nexport default Profile;","import React from 'react';\nimport Profile from \"./Profile\";\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile-reduser\";\nimport {connect} from \"react-redux\";\nimport {withRouter} from \"react-router-dom\";\nimport {witchAuthRedirect} from \"../../hoc/authRedirect\";\nimport {compose} from \"redux\";\n\nclass ProfileContainer extends React.Component {\n    componentDidMount() {\n        let userID = this.props.match.params.userID;\n        if (!userID) {\n            userID = this.props.authorizedUserId;\n            if (!userID){\n                this.props.history.push(\"/login\")\n            }\n        }\n        this.props.getUserProfile(userID);\n        this.props.getStatus(userID);\n    }\n\n    render() {\n        return (\n            <Profile {...this.props} profile={this.props.profile} status={this.props.status}\n                     updateStatus={this.props.updateStatus}/>\n        );\n    }\n}\n\nlet mapStateToProps = (state) => ({\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    authorizedUserId: state.auth.userId,\n    isAuth: state.auth.isAuth,\n\n});\n\nexport default compose(\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\n    withRouter,\n    witchAuthRedirect\n)(ProfileContainer);\n\n"],"sourceRoot":""}